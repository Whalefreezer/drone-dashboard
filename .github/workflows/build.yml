name: Build and Release

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      
      - name: Build Frontend
        working-directory: frontend
        run: deno task build
      
      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: backend/static
          retention-days: 1

  build-backend:
    needs: build-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: windows
            goos: windows
            goarch: amd64
            binary: drone-dashboard.exe
            compress: true
          - platform: linux-x86
            goos: linux
            goarch: amd64
            binary: drone-dashboard_linux_x86
            compress: true
          - platform: linux-arm
            goos: linux
            goarch: arm64
            binary: drone-dashboard_linux_arm
            compress: true
          - platform: mac-x86
            goos: darwin
            goarch: amd64
            binary: drone-dashboard_mac_x86
            compress: false
          - platform: mac-arm
            goos: darwin
            goarch: arm64
            binary: drone-dashboard_mac_arm
            compress: false
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/static
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          
      - name: Install UPX
        if: matrix.compress
        run: sudo apt-get update && sudo apt-get install -y upx-ucl
      
      - name: Create bin directory
        run: mkdir -p backend/bin
      
      - name: Build ${{ matrix.platform }}
        working-directory: backend
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -ldflags="-s -w" -trimpath -o bin/${{ matrix.binary }}
          if [ "${{ matrix.compress }}" = "true" ]; then
            upx --best bin/${{ matrix.binary }}
          fi
      
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform }}
          path: backend/bin/${{ matrix.binary }}
          retention-days: 7

  collect-binaries:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Create bin directory
        run: mkdir -p bin
        
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          pattern: binary-*
          path: bin
          merge-multiple: true

      - name: Upload Combined Binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: bin/
          retention-days: 7

  create-release:
    needs: collect-binaries
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: bin
      
      - name: Upload Release Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/drone-dashboard.exe
            bin/drone-dashboard_linux_x86
            bin/drone-dashboard_linux_arm
            bin/drone-dashboard_mac_x86
            bin/drone-dashboard_mac_arm 